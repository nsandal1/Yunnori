Classes(States, Methods)\
\
\
    Player#\{Piece\} [O&L]\
        Pieces(S)\
        Order(S)\
\
    Piece #[O]\
        Position(S)\
            Move(M)\
        Color(S)\
        Alive(S) [queued, inplay, completed]\
        Stuck(S)\ (Yes or No)
            Stick(M)\  (Are piece on the same position? [for Coord(n) is there any X in Dictionary s.t. Coord(X)=Coord(n))
                            if so, Coord(n) = Coord(X)) [Piece_x(Coord(X)-->Coord(n)]
             
        Graphics(C)\
    \
\
    Game#\{Player, Piece, Coordinates\}\
\
        Positions(C)\
        Coordinates(C)\
        Players(C)[who is playing::collection of Player instances]\
        Pieces(C)\
        \
        Branching(M) [Check if Branch is Possible / Choice Factor]\
        Roll(M)\
        Turn(S) [whose turn is it?]\
        Turn(M) [check for extra turns,update whose turn]\
        Respawn(M)\.  [Coord(X), Coord(Y), Coord(Z) = Coord(Origin), Coord(Origin), Coor(Origin)]
        Kill(M) [??????]\
        Shortcut(M) [Normal Move v. Special Move]\
        Taking(M) [Gives you an extra turn]\
        Continue(S) [Has someone won?]\
\
    Coordinates #[L]\
    \
        Grid(S)\
        Current Locations(S)\ [Dictionary]
        Piece2Grid(M)\
        UpdatePosition(M)\
        CheckIfEmpty(M)\
        ValidateMove(M) [Is new position valid?]}
